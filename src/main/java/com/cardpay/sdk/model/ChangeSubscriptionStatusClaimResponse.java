/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import lombok.Data;

@Data

public class ChangeSubscriptionStatusClaimResponse {
  @SerializedName("created")
  private OffsetDateTime created = null;
  @SerializedName("details")
  private String details = null;
  @SerializedName("id")
  private String id = null;
  /**
   * Status of claim: &#x60;IN_PROCESS&#x60; - claim is in queue to being processed &#x60;STOPPED&#x60; - claim failed to be processed &#x60;COMPLETED&#x60; - claim successfully processed
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    IN_PROCESS("IN_PROCESS"),
    
    STOPPED("STOPPED"),
    
    COMPLETED("COMPLETED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("status")
  private StatusEnum status = null;
  @SerializedName("subscription_data")
  private ClaimResponseSubscriptionData subscriptionData = null;
  @SerializedName("updated")
  private OffsetDateTime updated = null;
  
  public void setCreated(OffsetDateTime created) {
      this.created = created;
  }

  /**
   * @param created Creation time, [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return bean instance
   **/
  public ChangeSubscriptionStatusClaimResponse created(OffsetDateTime created) {
      this.created = created;
      return this;
  }

  
  public void setDetails(String details) {
      this.details = details;
  }

  /**
   * @param details Change claim details, errors etc.
   * @return bean instance
   **/
  public ChangeSubscriptionStatusClaimResponse details(String details) {
      this.details = details;
      return this;
  }

  
  public void setId(String id) {
      this.id = id;
  }

  /**
   * @param id ID of claim
   * @return bean instance
   **/
  public ChangeSubscriptionStatusClaimResponse id(String id) {
      this.id = id;
      return this;
  }

  
  public void setStatus(StatusEnum status) {
      this.status = status;
  }

  /**
   * @param status Status of claim: &#x60;IN_PROCESS&#x60; - claim is in queue to being processed &#x60;STOPPED&#x60; - claim failed to be processed &#x60;COMPLETED&#x60; - claim successfully processed
   * @return bean instance
   **/
  public ChangeSubscriptionStatusClaimResponse status(StatusEnum status) {
      this.status = status;
      return this;
  }

  
  public void setSubscriptionData(ClaimResponseSubscriptionData subscriptionData) {
      this.subscriptionData = subscriptionData;
  }

  /**
   * @param subscriptionData Subscription data
   * @return bean instance
   **/
  public ChangeSubscriptionStatusClaimResponse subscriptionData(ClaimResponseSubscriptionData subscriptionData) {
      this.subscriptionData = subscriptionData;
      return this;
  }

  
  public void setUpdated(OffsetDateTime updated) {
      this.updated = updated;
  }

  /**
   * @param updated Time when claim got the new status, [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return bean instance
   **/
  public ChangeSubscriptionStatusClaimResponse updated(OffsetDateTime updated) {
      this.updated = updated;
      return this;
  }


  @Override
  public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("ChangeSubscriptionStatusClaimResponse( ");
     
     if (created != null) sb.append("created=").append(created.toString()).append("; ");
     if (details != null) sb.append("details=").append(details.toString()).append("; ");
     if (id != null) sb.append("id=").append(id.toString()).append("; ");
     if (status != null) sb.append("status=").append(status.toString()).append("; ");
     if (subscriptionData != null) sb.append("subscriptionData=").append(subscriptionData.toString()).append("; ");
     if (updated != null) sb.append("updated=").append(updated.toString()).append("; ");
     sb.append(")");
     return sb.toString();
  }

}

