/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.annotations.SerializedName;
import java.math.BigDecimal;
import lombok.Data;

@Data

public class PlanQuantity {
  @SerializedName("ending_quantity")
  private Integer endingQuantity = null;
  @SerializedName("price_per_unit")
  private BigDecimal pricePerUnit = null;
  @SerializedName("starting_quantity")
  private Integer startingQuantity = null;
  
  public void setEndingQuantity(Integer endingQuantity) {
      this.endingQuantity = endingQuantity;
  }

  /**
   * minimum: 1
   * @param endingQuantity Ending units quantity of the subscription. Mandatory if &#x60;pricing_model&#x60; is &#x60;TIERED&#x60; or &#x60;VOLUME&#x60;
   * @return bean instance
   **/
  public PlanQuantity endingQuantity(Integer endingQuantity) {
      this.endingQuantity = endingQuantity;
      return this;
  }

  
  public void setPricePerUnit(BigDecimal pricePerUnit) {
      this.pricePerUnit = pricePerUnit;
  }

  /**
   * minimum: 0
   * @param pricePerUnit Price depending units quantity. Mandatory if &#x60;pricing_model&#x60; is &#x60;TIERED&#x60; or &#x60;VOLUME&#x60;
   * @return bean instance
   **/
  public PlanQuantity pricePerUnit(BigDecimal pricePerUnit) {
      this.pricePerUnit = pricePerUnit;
      return this;
  }

  
  public void setStartingQuantity(Integer startingQuantity) {
      this.startingQuantity = startingQuantity;
  }

  /**
   * minimum: 1
   * @param startingQuantity Starting units quantity of the subscription. Mandatory if &#x60;pricing_model&#x60; is &#x60;TIERED&#x60; or &#x60;VOLUME&#x60;
   * @return bean instance
   **/
  public PlanQuantity startingQuantity(Integer startingQuantity) {
      this.startingQuantity = startingQuantity;
      return this;
  }


  @Override
  public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("PlanQuantity( ");
     
     if (endingQuantity != null) sb.append("endingQuantity=").append(endingQuantity.toString()).append("; ");
     if (pricePerUnit != null) sb.append("pricePerUnit=").append(pricePerUnit.toString()).append("; ");
     if (startingQuantity != null) sb.append("startingQuantity=").append(startingQuantity.toString()).append("; ");
     sb.append(")");
     return sb.toString();
  }

}

