/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.annotations.SerializedName;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import lombok.Data;

@Data

public class ReportsResponse {
  @SerializedName("download_url")
  private String downloadUrl = null;
  @SerializedName("hash_sum")
  private String hashSum = null;
  @SerializedName("reports")
  private List<Report> reports = null;
  @SerializedName("sample_id")
  private UUID sampleId = null;
  @SerializedName("size")
  private Long size = null;
  
  public void setDownloadUrl(String downloadUrl) {
      this.downloadUrl = downloadUrl;
  }

  /**
   * @param downloadUrl Link to file downloading. Link is available for 24 hours
   * @return bean instance
   **/
  public ReportsResponse downloadUrl(String downloadUrl) {
      this.downloadUrl = downloadUrl;
      return this;
  }

  
  public void setHashSum(String hashSum) {
      this.hashSum = hashSum;
  }

  /**
   * @param hashSum Hash sum of file (sha256)
   * @return bean instance
   **/
  public ReportsResponse hashSum(String hashSum) {
      this.hashSum = hashSum;
      return this;
  }

  
  public void setReports(List<Report> reports) {
      this.reports = reports;
  }

  /**
   * @param reports List of settlement reports
   * @return bean instance
   **/
  public ReportsResponse reports(List<Report> reports) {
      this.reports = reports;
      return this;
  }

  public ReportsResponse addReportsItem(Report reportsItem) {
    if (this.reports == null) {
      this.reports = new ArrayList<>();
    }
    this.reports.add(reportsItem);
    return this;
  }

  
  public void setSampleId(UUID sampleId) {
      this.sampleId = sampleId;
  }

  /**
   * @param sampleId The identifier of reports&#39; sample
   * @return bean instance
   **/
  public ReportsResponse sampleId(UUID sampleId) {
      this.sampleId = sampleId;
      return this;
  }

  
  public void setSize(Long size) {
      this.size = size;
  }

  /**
   * @param size Size of file in bytes
   * @return bean instance
   **/
  public ReportsResponse size(Long size) {
      this.size = size;
      return this;
  }


  @Override
  public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("ReportsResponse( ");
     
     if (downloadUrl != null) sb.append("downloadUrl=").append(downloadUrl.toString()).append("; ");
     if (hashSum != null) sb.append("hashSum=").append(hashSum.toString()).append("; ");
     if (reports != null) sb.append("reports=").append(reports.toString()).append("; ");
     if (sampleId != null) sb.append("sampleId=").append(sampleId.toString()).append("; ");
     if (size != null) sb.append("size=").append(size.toString()).append("; ");
     sb.append(")");
     return sb.toString();
  }

}

