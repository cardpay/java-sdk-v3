/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.annotations.SerializedName;
import lombok.Data;

@Data

public class DisputeResponse {
  @SerializedName("card_account")
  private DisputeResponseCardAccount cardAccount = null;
  @SerializedName("customer")
  private DisputeResponseCustomer customer = null;
  @SerializedName("dispute_data")
  private DisputeResponseDisputeData disputeData = null;
  @SerializedName("merchant_order")
  private DisputeResponseMerchantOrder merchantOrder = null;
  @SerializedName("payment_data")
  private DisputeResponsePaymentData paymentData = null;
  
  public void setCardAccount(DisputeResponseCardAccount cardAccount) {
      this.cardAccount = cardAccount;
  }

  /**
   * @param cardAccount Bank card data
   * @return bean instance
   **/
  public DisputeResponse cardAccount(DisputeResponseCardAccount cardAccount) {
      this.cardAccount = cardAccount;
      return this;
  }

  
  public void setCustomer(DisputeResponseCustomer customer) {
      this.customer = customer;
  }

  /**
   * @param customer Customer data
   * @return bean instance
   **/
  public DisputeResponse customer(DisputeResponseCustomer customer) {
      this.customer = customer;
      return this;
  }

  
  public void setDisputeData(DisputeResponseDisputeData disputeData) {
      this.disputeData = disputeData;
  }

  /**
   * @param disputeData Dispute data
   * @return bean instance
   **/
  public DisputeResponse disputeData(DisputeResponseDisputeData disputeData) {
      this.disputeData = disputeData;
      return this;
  }

  
  public void setMerchantOrder(DisputeResponseMerchantOrder merchantOrder) {
      this.merchantOrder = merchantOrder;
  }

  /**
   * @param merchantOrder Merchant&#39;s order data
   * @return bean instance
   **/
  public DisputeResponse merchantOrder(DisputeResponseMerchantOrder merchantOrder) {
      this.merchantOrder = merchantOrder;
      return this;
  }

  
  public void setPaymentData(DisputeResponsePaymentData paymentData) {
      this.paymentData = paymentData;
  }

  /**
   * @param paymentData Payment data
   * @return bean instance
   **/
  public DisputeResponse paymentData(DisputeResponsePaymentData paymentData) {
      this.paymentData = paymentData;
      return this;
  }


  @Override
  public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("DisputeResponse( ");
     
     if (cardAccount != null) sb.append("cardAccount=").append(cardAccount.toString()).append("; ");
     if (customer != null) sb.append("customer=").append(customer.toString()).append("; ");
     if (disputeData != null) sb.append("disputeData=").append(disputeData.toString()).append("; ");
     if (merchantOrder != null) sb.append("merchantOrder=").append(merchantOrder.toString()).append("; ");
     if (paymentData != null) sb.append("paymentData=").append(paymentData.toString()).append("; ");
     sb.append(")");
     return sb.toString();
  }

}

