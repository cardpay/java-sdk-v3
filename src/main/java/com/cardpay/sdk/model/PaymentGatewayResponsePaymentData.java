/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.annotations.SerializedName;
import java.util.Map;
import lombok.Data;

@Data

public class PaymentGatewayResponsePaymentData {
  @SerializedName("extended_data")
  private Map<String, String> extendedData = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("separate_auth")
  private Boolean separateAuth = null;
  
  public void setExtendedData(Map<String, String> extendedData) {
      this.extendedData = extendedData;
  }

  /**
   * @param extendedData Extended structure with information for processing a payment in gateway mode. Contact your account manager to enable it
   * @return bean instance
   **/
  public PaymentGatewayResponsePaymentData extendedData(Map<String, String> extendedData) {
      this.extendedData = extendedData;
      return this;
  }

  
  public void setId(String id) {
      this.id = id;
  }

  /**
   * @param id Cardpay&#39;s payment id
   * @return bean instance
   **/
  public PaymentGatewayResponsePaymentData id(String id) {
      this.id = id;
      return this;
  }

  
  public void setSeparateAuth(Boolean separateAuth) {
      this.separateAuth = separateAuth;
  }

  /**
   * @param separateAuth Means that authentication can be carried separately from the payment. Possible values: true -  authentication can be carried separately, false -  authentication can not be carried separately
   * @return bean instance
   **/
  public PaymentGatewayResponsePaymentData separateAuth(Boolean separateAuth) {
      this.separateAuth = separateAuth;
      return this;
  }


  @Override
  public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("PaymentGatewayResponsePaymentData( ");
     
     if (extendedData != null) sb.append("extendedData=").append(extendedData.toString()).append("; ");
     if (id != null) sb.append("id=").append(id.toString()).append("; ");
     if (separateAuth != null) sb.append("separateAuth=").append(separateAuth.toString()).append("; ");
     sb.append(")");
     return sb.toString();
  }

}

