/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.annotations.SerializedName;
import lombok.Data;

@Data

public class Customer {
  @SerializedName("phone")
  private String phone = null;
  @SerializedName("email")
  private String email = null;
  
  public void setPhone(String phone) {
      this.phone = phone;
  }

  /**
   * @param phone phone
   * @return bean instance
   **/
  public Customer phone(String phone) {
      this.phone = phone;
      return this;
  }

  
  public void setEmail(String email) {
      this.email = email;
  }

  /**
   * @param email email
   * @return bean instance
   **/
  public Customer email(String email) {
      this.email = email;
      return this;
  }


  @Override
  public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("Customer( ");
     
     if (phone != null) sb.append("phone=").append(phone.toString()).append("; ");
     if (email != null) sb.append("email=").append(email.toString()).append("; ");
     sb.append(")");
     return sb.toString();
  }

}

