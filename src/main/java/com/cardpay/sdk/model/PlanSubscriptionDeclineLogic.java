/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.annotations.SerializedName;
import lombok.Data;

@Data

public class PlanSubscriptionDeclineLogic {
  @SerializedName("continue_retries")
  private Boolean continueRetries = null;
  @SerializedName("duration")
  private Integer duration = null;
  @SerializedName("status_to")
  private String statusTo = null;
  
  public void setContinueRetries(Boolean continueRetries) {
      this.continueRetries = continueRetries;
  }

  /**
   * @param continueRetries Continue retries
   * @return bean instance
   **/
  public PlanSubscriptionDeclineLogic continueRetries(Boolean continueRetries) {
      this.continueRetries = continueRetries;
      return this;
  }

  
  public void setDuration(Integer duration) {
      this.duration = duration;
  }

  /**
   * minimum: 1
   * maximum: 6
   * @param duration Duration in calendar months
   * @return bean instance
   **/
  public PlanSubscriptionDeclineLogic duration(Integer duration) {
      this.duration = duration;
      return this;
  }

  
  public void setStatusTo(String statusTo) {
      this.statusTo = statusTo;
  }

  /**
   * @param statusTo The status that will be set for the subscription after exhausted all payment retry attempts
   * @return bean instance
   **/
  public PlanSubscriptionDeclineLogic statusTo(String statusTo) {
      this.statusTo = statusTo;
      return this;
  }


  @Override
  public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("PlanSubscriptionDeclineLogic( ");
     
     if (continueRetries != null) sb.append("continueRetries=").append(continueRetries.toString()).append("; ");
     if (duration != null) sb.append("duration=").append(duration.toString()).append("; ");
     if (statusTo != null) sb.append("statusTo=").append(statusTo.toString()).append("; ");
     sb.append(")");
     return sb.toString();
  }

}

