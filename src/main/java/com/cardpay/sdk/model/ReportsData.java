/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.annotations.SerializedName;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import lombok.Data;

@Data

public class ReportsData {
  @SerializedName("end_date")
  private LocalDate endDate = null;
  @SerializedName("report_type")
  private List<String> reportType = null;
  @SerializedName("start_date")
  private LocalDate startDate = null;
  
  public void setEndDate(LocalDate endDate) {
      this.endDate = endDate;
  }

  /**
   * @param endDate End date of period on which the reports were generated. Period between dates is no more than 7 days.  The format is yyyy-MM-dd  If ‘end_date’ is skipped then default value is used: ‘start_date’ + 7 days
   * @return bean instance
   **/
  public ReportsData endDate(LocalDate endDate) {
      this.endDate = endDate;
      return this;
  }

  
  public void setReportType(List<String> reportType) {
      this.reportType = reportType;
  }

  /**
   * @param reportType Specific report type. Now are available: \&quot;regular_settlement\&quot;, \&quot;icpp_settlement\&quot;
   * @return bean instance
   **/
  public ReportsData reportType(List<String> reportType) {
      this.reportType = reportType;
      return this;
  }

  public ReportsData addReportTypeItem(String reportTypeItem) {
    if (this.reportType == null) {
      this.reportType = new ArrayList<>();
    }
    this.reportType.add(reportTypeItem);
    return this;
  }

  
  public void setStartDate(LocalDate startDate) {
      this.startDate = startDate;
  }

  /**
   * @param startDate Start date of period on which the reports were generated. The format is yyyy-MM-dd
   * @return bean instance
   **/
  public ReportsData startDate(LocalDate startDate) {
      this.startDate = startDate;
      return this;
  }


  @Override
  public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("ReportsData( ");
     
     if (endDate != null) sb.append("endDate=").append(endDate.toString()).append("; ");
     if (reportType != null) sb.append("reportType=").append(reportType.toString()).append("; ");
     if (startDate != null) sb.append("startDate=").append(startDate.toString()).append("; ");
     sb.append(")");
     return sb.toString();
  }

}

