/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.cardpay.sdk.model.RefundResponseCardAccount;
import com.cardpay.sdk.model.RefundResponseCustomer;
import com.cardpay.sdk.model.RefundResponsePaymentData;
import com.cardpay.sdk.model.RefundResponseRefundData;
import com.cardpay.sdk.model.TransactionResponseEWalletAccount;
import com.cardpay.sdk.model.TransactionResponseMerchantOrder;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import lombok.Data;

@Data

public class RefundCallback {
  @SerializedName("callback_time")
  private String callbackTime = null;
  @SerializedName("card_account")
  private RefundResponseCardAccount cardAccount = null;
  @SerializedName("customer")
  private RefundResponseCustomer customer = null;
  @SerializedName("ewallet_account")
  private TransactionResponseEWalletAccount ewalletAccount = null;
  @SerializedName("merchant_order")
  private TransactionResponseMerchantOrder merchantOrder = null;
  @SerializedName("payment_data")
  private RefundResponsePaymentData paymentData = null;
  @SerializedName("payment_method")
  private String paymentMethod = null;
  @SerializedName("refund_data")
  private RefundResponseRefundData refundData = null;
  
  public void setCallbackTime(String callbackTime) {
      this.callbackTime = callbackTime;
  }

  /**
   * @param callbackTime Date and time of created callback in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format
   * @return bean instance
   **/
  public RefundCallback callbackTime(String callbackTime) {
      this.callbackTime = callbackTime;
      return this;
  }

  
  public void setCardAccount(RefundResponseCardAccount cardAccount) {
      this.cardAccount = cardAccount;
  }

  /**
   * @param cardAccount Card account data *(for BANKCARD payment method only)*
   * @return bean instance
   **/
  public RefundCallback cardAccount(RefundResponseCardAccount cardAccount) {
      this.cardAccount = cardAccount;
      return this;
  }

  
  public void setCustomer(RefundResponseCustomer customer) {
      this.customer = customer;
  }

  /**
   * @param customer Customer data
   * @return bean instance
   **/
  public RefundCallback customer(RefundResponseCustomer customer) {
      this.customer = customer;
      return this;
  }

  
  public void setEwalletAccount(TransactionResponseEWalletAccount ewalletAccount) {
      this.ewalletAccount = ewalletAccount;
  }

  /**
   * @param ewalletAccount eWallet account data *(for ALIPAY and QIWI payment methods only)*
   * @return bean instance
   **/
  public RefundCallback ewalletAccount(TransactionResponseEWalletAccount ewalletAccount) {
      this.ewalletAccount = ewalletAccount;
      return this;
  }

  
  public void setMerchantOrder(TransactionResponseMerchantOrder merchantOrder) {
      this.merchantOrder = merchantOrder;
  }

  /**
   * @param merchantOrder Merchant order data
   * @return bean instance
   **/
  public RefundCallback merchantOrder(TransactionResponseMerchantOrder merchantOrder) {
      this.merchantOrder = merchantOrder;
      return this;
  }

  
  public void setPaymentData(RefundResponsePaymentData paymentData) {
      this.paymentData = paymentData;
  }

  /**
   * @param paymentData Payment data
   * @return bean instance
   **/
  public RefundCallback paymentData(RefundResponsePaymentData paymentData) {
      this.paymentData = paymentData;
      return this;
  }

  
  public void setPaymentMethod(String paymentMethod) {
      this.paymentMethod = paymentMethod;
  }

  /**
   * @param paymentMethod Used payment method type name from payment methods list
   * @return bean instance
   **/
  public RefundCallback paymentMethod(String paymentMethod) {
      this.paymentMethod = paymentMethod;
      return this;
  }

  
  public void setRefundData(RefundResponseRefundData refundData) {
      this.refundData = refundData;
  }

  /**
   * @param refundData Refund data
   * @return bean instance
   **/
  public RefundCallback refundData(RefundResponseRefundData refundData) {
      this.refundData = refundData;
      return this;
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RefundCallback {\n");
    
    if (callbackTime != null) sb.append("    callbackTime: ").append(toIndentedString(callbackTime)).append("\n");
    if (cardAccount != null) sb.append("    cardAccount: ").append(toIndentedString(cardAccount)).append("\n");
    if (customer != null) sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    if (ewalletAccount != null) sb.append("    ewalletAccount: ").append(toIndentedString(ewalletAccount)).append("\n");
    if (merchantOrder != null) sb.append("    merchantOrder: ").append(toIndentedString(merchantOrder)).append("\n");
    if (paymentData != null) sb.append("    paymentData: ").append(toIndentedString(paymentData)).append("\n");
    if (paymentMethod != null) sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    if (refundData != null) sb.append("    refundData: ").append(toIndentedString(refundData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


}

