/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.annotations.SerializedName;
import java.time.OffsetDateTime;
import lombok.Data;

@Data

public class MobileTokenResponse {
  @SerializedName("expires")
  private OffsetDateTime expires = null;
  @SerializedName("mobile_token")
  private String mobileToken = null;
  
  public void setExpires(OffsetDateTime expires) {
      this.expires = expires;
  }

  /**
   * @param expires Date and time of mobile token expiration in ISO 8601 format, example of format - yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;
   * @return bean instance
   **/
  public MobileTokenResponse expires(OffsetDateTime expires) {
      this.expires = expires;
      return this;
  }

  
  public void setMobileToken(String mobileToken) {
      this.mobileToken = mobileToken;
  }

  /**
   * @param mobileToken Unique identifier, max 128 symbols
   * @return bean instance
   **/
  public MobileTokenResponse mobileToken(String mobileToken) {
      this.mobileToken = mobileToken;
      return this;
  }


  @Override
  public String toString() {
     StringBuilder sb = new StringBuilder();
     sb.append("MobileTokenResponse( ");
     
     if (expires != null) sb.append("expires=").append(expires.toString()).append("; ");
     if (mobileToken != null) sb.append("mobileToken=").append(mobileToken.toString()).append("; ");
     sb.append(")");
     return sb.toString();
  }

}

