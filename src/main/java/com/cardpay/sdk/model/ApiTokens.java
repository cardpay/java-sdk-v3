/*
 * CardPay REST API
 * Welcome to the CardPay REST API. The CardPay API uses HTTP verbs and a [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) resources endpoint structure (see more info about REST). Request and response payloads are formatted as JSON. Merchant uses API to create payments, refunds, payouts or recurrings, check or update transaction status and get information about created transactions. In API authentication process based on [OAuth 2.0](https://oauth.net/2/) standard. For recent changes see changelog section.
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import com.google.gson.annotations.SerializedName;
import lombok.Data;

@Data

public class ApiTokens {
  @SerializedName("access_token")
  private String accessToken = null;
  @SerializedName("expires_in")
  private Long expiresIn = null;
  @SerializedName("refresh_expires_in")
  private Long refreshExpiresIn = null;
  @SerializedName("refresh_token")
  private String refreshToken = null;
  @SerializedName("token_type")
  private String tokenType = null;
  
  public void setAccessToken(String accessToken) {
      this.accessToken = accessToken;
  }

  /**
   * @param accessToken API access token which grants the access to the list of authorized services.
   * @return bean instance
   **/
  public ApiTokens accessToken(String accessToken) {
      this.accessToken = accessToken;
      return this;
  }

  
  public void setExpiresIn(Long expiresIn) {
      this.expiresIn = expiresIn;
  }

  /**
   * @param expiresIn Access token lifetime in seconds.
   * @return bean instance
   **/
  public ApiTokens expiresIn(Long expiresIn) {
      this.expiresIn = expiresIn;
      return this;
  }

  
  public void setRefreshExpiresIn(Long refreshExpiresIn) {
      this.refreshExpiresIn = refreshExpiresIn;
  }

  /**
   * @param refreshExpiresIn Refresh token lifetime in seconds.
   * @return bean instance
   **/
  public ApiTokens refreshExpiresIn(Long refreshExpiresIn) {
      this.refreshExpiresIn = refreshExpiresIn;
      return this;
  }

  
  public void setRefreshToken(String refreshToken) {
      this.refreshToken = refreshToken;
  }

  /**
   * @param refreshToken API refresh token that is used to update expired access token.
   * @return bean instance
   **/
  public ApiTokens refreshToken(String refreshToken) {
      this.refreshToken = refreshToken;
      return this;
  }

  
  public void setTokenType(String tokenType) {
      this.tokenType = tokenType;
  }

  /**
   * @param tokenType Access token type
   * @return bean instance
   **/
  public ApiTokens tokenType(String tokenType) {
      this.tokenType = tokenType;
      return this;
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiTokens {\n");
    
    if (accessToken != null) sb.append("    accessToken: ").append(toIndentedString(accessToken)).append("\n");
    if (expiresIn != null) sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    if (refreshExpiresIn != null) sb.append("    refreshExpiresIn: ").append(toIndentedString(refreshExpiresIn)).append("\n");
    if (refreshToken != null) sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    if (tokenType != null) sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


}

